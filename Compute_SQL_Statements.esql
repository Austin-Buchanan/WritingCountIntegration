DECLARE out_text CHAR;
DECLARE shrError SHARED CHAR;

CREATE COMPUTE MODULE Compute_SQL_Statements
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		IF VerifyDFDL() THEN
			CALL ReadCSV();
			CALL WriteTXT();
		ELSE
			RETURN FALSE;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE ReadCSV() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		DECLARE record_date CHAR;
		DECLARE record_start_count CHAR;
		DECLARE record_end_count CHAR;
		DECLARE record_progress CHAR;
		SET J = CARDINALITY(InputRoot.DFDL.WritingCount_CSV_Model.record[]);
		WHILE I < J DO
			IF I = 1 THEN
				SET out_text = 'INSERT INTO WritingCounts (Project, Writing_Date, Start_Count, End_Count) VALUES ("'
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_project || '", "'
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_date || '", '
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_start_count || ', '
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_end_count
								|| '); ';
			ELSE
				SET out_text = out_text || 'INSERT INTO WritingCounts (Project, Writing_Date, Start_Count, End_Count) VALUES ("'
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_project || '", "'
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_date || '", '
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_start_count || ', '
								|| InputRoot.DFDL.WritingCount_CSV_Model.record[I].record_end_count
								|| '); ';
			END IF;
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE WriteTXT() BEGIN
		SET OutputRoot.Properties.MessageType = '';	
		SET OutputRoot.Properties.CodedCharSetId = 1208;
		DELETE FIELD OutputRoot.MQMD;
		CREATE LASTCHILD OF OutputRoot DOMAIN('BLOB');
		IF STARTSWITH(out_text, 'INSERT') THEN
			SET OutputRoot.BLOB.BLOB = CAST(out_text AS BLOB CCSID 1208);
		ELSE 
			DECLARE ERROR_TEXT CHAR;
			SET ERROR_TEXT = 'out_text did not start with INSERT'; 
			SET OutputRoot.BLOB.BLOB = CAST(ERROR_TEXT AS BLOB CCSID 1208);
		END IF; 
	END;	
	
	CREATE FUNCTION VerifyDFDL() RETURNS BOOLEAN
	BEGIN
		IF InputRoot.DFDL.WritingCount_CSV_Model.record[1].record_project IS NULL THEN
			SET OutputRoot = InputRoot;
			SET shrError = 'Input was not in the WritingCount_CSV_Model.xsd format.';
			PROPAGATE TO TERMINAL ('out1');
			RETURN FALSE;
		ELSE 
			RETURN TRUE;
		END IF;
	END;

END MODULE;